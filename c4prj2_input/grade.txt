Grading at Sat May  4 03:12:09 UTC 2019
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Your file matched the expected output
Test case passed
Testing with input file with 
 o Many hands
 o No unknown/future cards
Your file matched the expected output
Test case passed
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==1507== Memcheck, a memory error detector
==1507== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1507== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1507== Command: ./tester h.txt d.txt
==1507== Parent PID: 1506
==1507== 
==1507== Invalid write of size 8
==1507==    at 0x4012B0: add_future_card (in /graderhome/work/c4prj2_input/tester)
==1507==    by 0x400D55: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1507==    by 0x400F2C: read_input (in /graderhome/work/c4prj2_input/tester)
==1507==    by 0x4022BF: main (test-input.c:69)
==1507==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1507== 
==1507== 
==1507== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1507==  Access not within mapped region at address 0x0
==1507==    at 0x4012B0: add_future_card (in /graderhome/work/c4prj2_input/tester)
==1507==    by 0x400D55: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1507==    by 0x400F2C: read_input (in /graderhome/work/c4prj2_input/tester)
==1507==    by 0x4022BF: main (test-input.c:69)
==1507==  If you believe this happened as a result of a stack
==1507==  overflow in your program's main thread (unlikely but
==1507==  possible), you can try to increase the size of the
==1507==  main thread stack using the --main-stacksize= flag.
==1507==  The main thread stack size used in this run was 8388608.
==1507== 
==1507== HEAP SUMMARY:
==1507==     in use at exit: 832 bytes in 14 blocks
==1507==   total heap usage: 21 allocs, 7 frees, 5,096 bytes allocated
==1507== 
==1507== LEAK SUMMARY:
==1507==    definitely lost: 0 bytes in 0 blocks
==1507==    indirectly lost: 0 bytes in 0 blocks
==1507==      possibly lost: 0 bytes in 0 blocks
==1507==    still reachable: 832 bytes in 14 blocks
==1507==         suppressed: 0 bytes in 0 blocks
==1507== Rerun with --leak-check=full to see details of leaked memory
==1507== 
==1507== For counts of detected and suppressed errors, rerun with: -v
==1507== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==1513== Memcheck, a memory error detector
==1513== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1513== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1513== Command: ./tester i1 i2
==1513== Parent PID: 1512
==1513== 
==1513== Invalid write of size 8
==1513==    at 0x4012B0: add_future_card (in /graderhome/work/c4prj2_input/tester)
==1513==    by 0x400D55: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1513==    by 0x400F2C: read_input (in /graderhome/work/c4prj2_input/tester)
==1513==    by 0x4022BF: main (test-input.c:69)
==1513==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1513== 
==1513== 
==1513== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1513==  Access not within mapped region at address 0x0
==1513==    at 0x4012B0: add_future_card (in /graderhome/work/c4prj2_input/tester)
==1513==    by 0x400D55: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1513==    by 0x400F2C: read_input (in /graderhome/work/c4prj2_input/tester)
==1513==    by 0x4022BF: main (test-input.c:69)
==1513==  If you believe this happened as a result of a stack
==1513==  overflow in your program's main thread (unlikely but
==1513==  possible), you can try to increase the size of the
==1513==  main thread stack using the --main-stacksize= flag.
==1513==  The main thread stack size used in this run was 8388608.
==1513== 
==1513== HEAP SUMMARY:
==1513==     in use at exit: 784 bytes in 11 blocks
==1513==   total heap usage: 15 allocs, 4 frees, 4,928 bytes allocated
==1513== 
==1513== LEAK SUMMARY:
==1513==    definitely lost: 0 bytes in 0 blocks
==1513==    indirectly lost: 0 bytes in 0 blocks
==1513==      possibly lost: 0 bytes in 0 blocks
==1513==    still reachable: 784 bytes in 11 blocks
==1513==         suppressed: 0 bytes in 0 blocks
==1513== Rerun with --leak-check=full to see details of leaked memory
==1513== 
==1513== For counts of detected and suppressed errors, rerun with: -v
==1513== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Overall Grade: C
