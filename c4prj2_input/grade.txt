Grading at Sat May 11 03:12:22 UTC 2019
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Your file matched the expected output
Test case passed
Testing with input file with 
 o Many hands
 o No unknown/future cards
Your file matched the expected output
Test case passed
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==1120== Memcheck, a memory error detector
==1120== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1120== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1120== Command: ./tester h.txt d.txt
==1120== Parent PID: 1119
==1120== 
==1120== Invalid write of size 8
==1120==    at 0x40133A: add_future_card (in /graderhome/work/c4prj2_input/tester)
==1120==    by 0x400DB3: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1120==    by 0x400F96: read_input (in /graderhome/work/c4prj2_input/tester)
==1120==    by 0x4023F8: main (test-input.c:69)
==1120==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1120== 
==1120== 
==1120== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1120==  Access not within mapped region at address 0x0
==1120==    at 0x40133A: add_future_card (in /graderhome/work/c4prj2_input/tester)
==1120==    by 0x400DB3: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1120==    by 0x400F96: read_input (in /graderhome/work/c4prj2_input/tester)
==1120==    by 0x4023F8: main (test-input.c:69)
==1120==  If you believe this happened as a result of a stack
==1120==  overflow in your program's main thread (unlikely but
==1120==  possible), you can try to increase the size of the
==1120==  main thread stack using the --main-stacksize= flag.
==1120==  The main thread stack size used in this run was 8388608.
==1120== 
==1120== HEAP SUMMARY:
==1120==     in use at exit: 848 bytes in 16 blocks
==1120==   total heap usage: 23 allocs, 7 frees, 5,112 bytes allocated
==1120== 
==1120== LEAK SUMMARY:
==1120==    definitely lost: 16 bytes in 2 blocks
==1120==    indirectly lost: 0 bytes in 0 blocks
==1120==      possibly lost: 0 bytes in 0 blocks
==1120==    still reachable: 832 bytes in 14 blocks
==1120==         suppressed: 0 bytes in 0 blocks
==1120== Rerun with --leak-check=full to see details of leaked memory
==1120== 
==1120== For counts of detected and suppressed errors, rerun with: -v
==1120== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==1126== Memcheck, a memory error detector
==1126== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1126== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1126== Command: ./tester i1 i2
==1126== Parent PID: 1125
==1126== 
==1126== Invalid write of size 8
==1126==    at 0x40133A: add_future_card (in /graderhome/work/c4prj2_input/tester)
==1126==    by 0x400DB3: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1126==    by 0x400F96: read_input (in /graderhome/work/c4prj2_input/tester)
==1126==    by 0x4023F8: main (test-input.c:69)
==1126==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1126== 
==1126== 
==1126== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1126==  Access not within mapped region at address 0x0
==1126==    at 0x40133A: add_future_card (in /graderhome/work/c4prj2_input/tester)
==1126==    by 0x400DB3: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1126==    by 0x400F96: read_input (in /graderhome/work/c4prj2_input/tester)
==1126==    by 0x4023F8: main (test-input.c:69)
==1126==  If you believe this happened as a result of a stack
==1126==  overflow in your program's main thread (unlikely but
==1126==  possible), you can try to increase the size of the
==1126==  main thread stack using the --main-stacksize= flag.
==1126==  The main thread stack size used in this run was 8388608.
==1126== 
==1126== HEAP SUMMARY:
==1126==     in use at exit: 800 bytes in 13 blocks
==1126==   total heap usage: 17 allocs, 4 frees, 4,944 bytes allocated
==1126== 
==1126== LEAK SUMMARY:
==1126==    definitely lost: 16 bytes in 2 blocks
==1126==    indirectly lost: 0 bytes in 0 blocks
==1126==      possibly lost: 0 bytes in 0 blocks
==1126==    still reachable: 784 bytes in 11 blocks
==1126==         suppressed: 0 bytes in 0 blocks
==1126== Rerun with --leak-check=full to see details of leaked memory
==1126== 
==1126== For counts of detected and suppressed errors, rerun with: -v
==1126== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Overall Grade: C
