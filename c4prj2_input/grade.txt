Grading at Fri May 17 04:52:46 UTC 2019
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Your file matched the expected output
Test case passed
Testing with input file with 
 o Many hands
 o No unknown/future cards
Your file matched the expected output
Test case passed
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==2724== Memcheck, a memory error detector
==2724== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2724== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2724== Command: ./tester h.txt d.txt
==2724== Parent PID: 2723
==2724== 
==2724== Invalid read of size 8
==2724==    at 0x40156D: add_future_card (in /graderhome/work/c4prj2_input/tester)
==2724==    by 0x400DA6: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==2724==    by 0x401061: read_input (in /graderhome/work/c4prj2_input/tester)
==2724==    by 0x4025EB: main (test-input.c:69)
==2724==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==2724== 
==2724== 
==2724== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2724==  Access not within mapped region at address 0x0
==2724==    at 0x40156D: add_future_card (in /graderhome/work/c4prj2_input/tester)
==2724==    by 0x400DA6: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==2724==    by 0x401061: read_input (in /graderhome/work/c4prj2_input/tester)
==2724==    by 0x4025EB: main (test-input.c:69)
==2724==  If you believe this happened as a result of a stack
==2724==  overflow in your program's main thread (unlikely but
==2724==  possible), you can try to increase the size of the
==2724==  main thread stack using the --main-stacksize= flag.
==2724==  The main thread stack size used in this run was 8388608.
==2724== 
==2724== HEAP SUMMARY:
==2724==     in use at exit: 904 bytes in 18 blocks
==2724==   total heap usage: 30 allocs, 12 frees, 5,288 bytes allocated
==2724== 
==2724== LEAK SUMMARY:
==2724==    definitely lost: 8 bytes in 1 blocks
==2724==    indirectly lost: 0 bytes in 0 blocks
==2724==      possibly lost: 0 bytes in 0 blocks
==2724==    still reachable: 896 bytes in 17 blocks
==2724==         suppressed: 0 bytes in 0 blocks
==2724== Rerun with --leak-check=full to see details of leaked memory
==2724== 
==2724== For counts of detected and suppressed errors, rerun with: -v
==2724== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==2730== Memcheck, a memory error detector
==2730== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2730== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2730== Command: ./tester i1 i2
==2730== Parent PID: 2729
==2730== 
==2730== Invalid read of size 8
==2730==    at 0x40156D: add_future_card (in /graderhome/work/c4prj2_input/tester)
==2730==    by 0x400DA6: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==2730==    by 0x401061: read_input (in /graderhome/work/c4prj2_input/tester)
==2730==    by 0x4025EB: main (test-input.c:69)
==2730==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==2730== 
==2730== 
==2730== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2730==  Access not within mapped region at address 0x0
==2730==    at 0x40156D: add_future_card (in /graderhome/work/c4prj2_input/tester)
==2730==    by 0x400DA6: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==2730==    by 0x401061: read_input (in /graderhome/work/c4prj2_input/tester)
==2730==    by 0x4025EB: main (test-input.c:69)
==2730==  If you believe this happened as a result of a stack
==2730==  overflow in your program's main thread (unlikely but
==2730==  possible), you can try to increase the size of the
==2730==  main thread stack using the --main-stacksize= flag.
==2730==  The main thread stack size used in this run was 8388608.
==2730== 
==2730== HEAP SUMMARY:
==2730==     in use at exit: 832 bytes in 15 blocks
==2730==   total heap usage: 21 allocs, 6 frees, 5,000 bytes allocated
==2730== 
==2730== LEAK SUMMARY:
==2730==    definitely lost: 8 bytes in 1 blocks
==2730==    indirectly lost: 0 bytes in 0 blocks
==2730==      possibly lost: 0 bytes in 0 blocks
==2730==    still reachable: 824 bytes in 14 blocks
==2730==         suppressed: 0 bytes in 0 blocks
==2730== Rerun with --leak-check=full to see details of leaked memory
==2730== 
==2730== For counts of detected and suppressed errors, rerun with: -v
==2730== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Overall Grade: C
