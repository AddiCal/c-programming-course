Grading at Sat May  4 02:42:12 UTC 2019
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Your file matched the expected output
Test case passed
Testing with input file with 
 o Many hands
 o No unknown/future cards
Your file matched the expected output
Test case passed
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==1178== Memcheck, a memory error detector
==1178== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1178== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1178== Command: ./tester h.txt d.txt
==1178== Parent PID: 1177
==1178== 
==1178== Invalid read of size 8
==1178==    at 0x400FD1: add_future_card (in /graderhome/work/c4prj2_input/tester)
==1178==    by 0x400D55: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1178==    by 0x400F2C: read_input (in /graderhome/work/c4prj2_input/tester)
==1178==    by 0x402278: main (test-input.c:69)
==1178==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==1178== 
==1178== 
==1178== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1178==  Access not within mapped region at address 0x8
==1178==    at 0x400FD1: add_future_card (in /graderhome/work/c4prj2_input/tester)
==1178==    by 0x400D55: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1178==    by 0x400F2C: read_input (in /graderhome/work/c4prj2_input/tester)
==1178==    by 0x402278: main (test-input.c:69)
==1178==  If you believe this happened as a result of a stack
==1178==  overflow in your program's main thread (unlikely but
==1178==  possible), you can try to increase the size of the
==1178==  main thread stack using the --main-stacksize= flag.
==1178==  The main thread stack size used in this run was 8388608.
==1178== 
==1178== HEAP SUMMARY:
==1178==     in use at exit: 808 bytes in 12 blocks
==1178==   total heap usage: 19 allocs, 7 frees, 5,072 bytes allocated
==1178== 
==1178== LEAK SUMMARY:
==1178==    definitely lost: 0 bytes in 0 blocks
==1178==    indirectly lost: 0 bytes in 0 blocks
==1178==      possibly lost: 0 bytes in 0 blocks
==1178==    still reachable: 808 bytes in 12 blocks
==1178==         suppressed: 0 bytes in 0 blocks
==1178== Rerun with --leak-check=full to see details of leaked memory
==1178== 
==1178== For counts of detected and suppressed errors, rerun with: -v
==1178== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==1184== Memcheck, a memory error detector
==1184== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1184== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1184== Command: ./tester i1 i2
==1184== Parent PID: 1183
==1184== 
==1184== Invalid read of size 8
==1184==    at 0x400FD1: add_future_card (in /graderhome/work/c4prj2_input/tester)
==1184==    by 0x400D55: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1184==    by 0x400F2C: read_input (in /graderhome/work/c4prj2_input/tester)
==1184==    by 0x402278: main (test-input.c:69)
==1184==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==1184== 
==1184== 
==1184== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1184==  Access not within mapped region at address 0x8
==1184==    at 0x400FD1: add_future_card (in /graderhome/work/c4prj2_input/tester)
==1184==    by 0x400D55: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1184==    by 0x400F2C: read_input (in /graderhome/work/c4prj2_input/tester)
==1184==    by 0x402278: main (test-input.c:69)
==1184==  If you believe this happened as a result of a stack
==1184==  overflow in your program's main thread (unlikely but
==1184==  possible), you can try to increase the size of the
==1184==  main thread stack using the --main-stacksize= flag.
==1184==  The main thread stack size used in this run was 8388608.
==1184== 
==1184== HEAP SUMMARY:
==1184==     in use at exit: 760 bytes in 9 blocks
==1184==   total heap usage: 13 allocs, 4 frees, 4,904 bytes allocated
==1184== 
==1184== LEAK SUMMARY:
==1184==    definitely lost: 0 bytes in 0 blocks
==1184==    indirectly lost: 0 bytes in 0 blocks
==1184==      possibly lost: 0 bytes in 0 blocks
==1184==    still reachable: 760 bytes in 9 blocks
==1184==         suppressed: 0 bytes in 0 blocks
==1184== Rerun with --leak-check=full to see details of leaked memory
==1184== 
==1184== For counts of detected and suppressed errors, rerun with: -v
==1184== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Overall Grade: C
