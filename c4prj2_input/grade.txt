Grading at Wed May 29 16:52:58 UTC 2019
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Valgrind reported errors:
==1269== Memcheck, a memory error detector
==1269== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1269== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1269== Command: ./tester hands.txt draw.txt
==1269== Parent PID: 1268
==1269== 
==1269== Use of uninitialised value of size 8
==1269==    at 0x401B38: add_card_to (in /graderhome/work/c4prj2_input/tester)
==1269==    by 0x4024F9: simple_hand_from_string (test-input.c:16)
==1269==    by 0x402563: simple_read_input (test-input.c:32)
==1269==    by 0x4027EE: main (test-input.c:77)
==1269== 
==1269== Invalid write of size 8
==1269==    at 0x401B38: add_card_to (in /graderhome/work/c4prj2_input/tester)
==1269==    by 0x4024F9: simple_hand_from_string (test-input.c:16)
==1269==    by 0x402563: simple_read_input (test-input.c:32)
==1269==    by 0x4027EE: main (test-input.c:77)
==1269==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1269== 
==1269== 
==1269== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1269==  Access not within mapped region at address 0x0
==1269==    at 0x401B38: add_card_to (in /graderhome/work/c4prj2_input/tester)
==1269==    by 0x4024F9: simple_hand_from_string (test-input.c:16)
==1269==    by 0x402563: simple_read_input (test-input.c:32)
==1269==    by 0x4027EE: main (test-input.c:77)
==1269==  If you believe this happened as a result of a stack
==1269==  overflow in your program's main thread (unlikely but
==1269==  possible), you can try to increase the size of the
==1269==  main thread stack using the --main-stacksize= flag.
==1269==  The main thread stack size used in this run was 8388608.
==1269== 
==1269== HEAP SUMMARY:
==1269==     in use at exit: 1,016 bytes in 17 blocks
==1269==   total heap usage: 33 allocs, 16 frees, 10,216 bytes allocated
==1269== 
==1269== LEAK SUMMARY:
==1269==    definitely lost: 184 bytes in 3 blocks
==1269==    indirectly lost: 0 bytes in 0 blocks
==1269==      possibly lost: 0 bytes in 0 blocks
==1269==    still reachable: 832 bytes in 14 blocks
==1269==         suppressed: 0 bytes in 0 blocks
==1269== Rerun with --leak-check=full to see details of leaked memory
==1269== 
==1269== For counts of detected and suppressed errors, rerun with: -v
==1269== Use --track-origins=yes to see where uninitialised values come from
==1269== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o No unknown/future cards
Valgrind reported errors:
==1274== Memcheck, a memory error detector
==1274== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1274== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1274== Command: ./tester hands.txt draw.txt
==1274== Parent PID: 1273
==1274== 
==1274== Use of uninitialised value of size 8
==1274==    at 0x401B38: add_card_to (in /graderhome/work/c4prj2_input/tester)
==1274==    by 0x4024F9: simple_hand_from_string (test-input.c:16)
==1274==    by 0x402563: simple_read_input (test-input.c:32)
==1274==    by 0x4027EE: main (test-input.c:77)
==1274== 
==1274== Invalid write of size 8
==1274==    at 0x401B38: add_card_to (in /graderhome/work/c4prj2_input/tester)
==1274==    by 0x4024F9: simple_hand_from_string (test-input.c:16)
==1274==    by 0x402563: simple_read_input (test-input.c:32)
==1274==    by 0x4027EE: main (test-input.c:77)
==1274==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1274== 
==1274== 
==1274== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1274==  Access not within mapped region at address 0x0
==1274==    at 0x401B38: add_card_to (in /graderhome/work/c4prj2_input/tester)
==1274==    by 0x4024F9: simple_hand_from_string (test-input.c:16)
==1274==    by 0x402563: simple_read_input (test-input.c:32)
==1274==    by 0x4027EE: main (test-input.c:77)
==1274==  If you believe this happened as a result of a stack
==1274==  overflow in your program's main thread (unlikely but
==1274==  possible), you can try to increase the size of the
==1274==  main thread stack using the --main-stacksize= flag.
==1274==  The main thread stack size used in this run was 8388608.
==1274== 
==1274== HEAP SUMMARY:
==1274==     in use at exit: 1,976 bytes in 53 blocks
==1274==   total heap usage: 108 allocs, 55 frees, 12,232 bytes allocated
==1274== 
==1274== LEAK SUMMARY:
==1274==    definitely lost: 736 bytes in 12 blocks
==1274==    indirectly lost: 0 bytes in 0 blocks
==1274==      possibly lost: 0 bytes in 0 blocks
==1274==    still reachable: 1,240 bytes in 41 blocks
==1274==         suppressed: 0 bytes in 0 blocks
==1274== Rerun with --leak-check=full to see details of leaked memory
==1274== 
==1274== For counts of detected and suppressed errors, rerun with: -v
==1274== Use --track-origins=yes to see where uninitialised values come from
==1274== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==1280== Memcheck, a memory error detector
==1280== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1280== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1280== Command: ./tester h.txt d.txt
==1280== Parent PID: 1279
==1280== 
==1280== Use of uninitialised value of size 8
==1280==    at 0x401B38: add_card_to (in /graderhome/work/c4prj2_input/tester)
==1280==    by 0x401BDD: add_empty_card (in /graderhome/work/c4prj2_input/tester)
==1280==    by 0x400D86: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1280==    by 0x401061: read_input (in /graderhome/work/c4prj2_input/tester)
==1280==    by 0x40276C: main (test-input.c:69)
==1280== 
==1280== Invalid write of size 8
==1280==    at 0x401B38: add_card_to (in /graderhome/work/c4prj2_input/tester)
==1280==    by 0x401BDD: add_empty_card (in /graderhome/work/c4prj2_input/tester)
==1280==    by 0x400D86: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1280==    by 0x401061: read_input (in /graderhome/work/c4prj2_input/tester)
==1280==    by 0x40276C: main (test-input.c:69)
==1280==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1280== 
==1280== 
==1280== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1280==  Access not within mapped region at address 0x0
==1280==    at 0x401B38: add_card_to (in /graderhome/work/c4prj2_input/tester)
==1280==    by 0x401BDD: add_empty_card (in /graderhome/work/c4prj2_input/tester)
==1280==    by 0x400D86: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1280==    by 0x401061: read_input (in /graderhome/work/c4prj2_input/tester)
==1280==    by 0x40276C: main (test-input.c:69)
==1280==  If you believe this happened as a result of a stack
==1280==  overflow in your program's main thread (unlikely but
==1280==  possible), you can try to increase the size of the
==1280==  main thread stack using the --main-stacksize= flag.
==1280==  The main thread stack size used in this run was 8388608.
==1280== 
==1280== HEAP SUMMARY:
==1280==     in use at exit: 856 bytes in 14 blocks
==1280==   total heap usage: 25 allocs, 11 frees, 5,192 bytes allocated
==1280== 
==1280== LEAK SUMMARY:
==1280==    definitely lost: 0 bytes in 0 blocks
==1280==    indirectly lost: 0 bytes in 0 blocks
==1280==      possibly lost: 0 bytes in 0 blocks
==1280==    still reachable: 856 bytes in 14 blocks
==1280==         suppressed: 0 bytes in 0 blocks
==1280== Rerun with --leak-check=full to see details of leaked memory
==1280== 
==1280== For counts of detected and suppressed errors, rerun with: -v
==1280== Use --track-origins=yes to see where uninitialised values come from
==1280== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==1286== Memcheck, a memory error detector
==1286== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1286== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1286== Command: ./tester i1 i2
==1286== Parent PID: 1285
==1286== 
==1286== Use of uninitialised value of size 8
==1286==    at 0x401B38: add_card_to (in /graderhome/work/c4prj2_input/tester)
==1286==    by 0x401BDD: add_empty_card (in /graderhome/work/c4prj2_input/tester)
==1286==    by 0x400D86: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1286==    by 0x401061: read_input (in /graderhome/work/c4prj2_input/tester)
==1286==    by 0x40276C: main (test-input.c:69)
==1286== 
==1286== Invalid write of size 8
==1286==    at 0x401B38: add_card_to (in /graderhome/work/c4prj2_input/tester)
==1286==    by 0x401BDD: add_empty_card (in /graderhome/work/c4prj2_input/tester)
==1286==    by 0x400D86: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1286==    by 0x401061: read_input (in /graderhome/work/c4prj2_input/tester)
==1286==    by 0x40276C: main (test-input.c:69)
==1286==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1286== 
==1286== 
==1286== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1286==  Access not within mapped region at address 0x0
==1286==    at 0x401B38: add_card_to (in /graderhome/work/c4prj2_input/tester)
==1286==    by 0x401BDD: add_empty_card (in /graderhome/work/c4prj2_input/tester)
==1286==    by 0x400D86: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1286==    by 0x401061: read_input (in /graderhome/work/c4prj2_input/tester)
==1286==    by 0x40276C: main (test-input.c:69)
==1286==  If you believe this happened as a result of a stack
==1286==  overflow in your program's main thread (unlikely but
==1286==  possible), you can try to increase the size of the
==1286==  main thread stack using the --main-stacksize= flag.
==1286==  The main thread stack size used in this run was 8388608.
==1286== 
==1286== HEAP SUMMARY:
==1286==     in use at exit: 784 bytes in 11 blocks
==1286==   total heap usage: 16 allocs, 5 frees, 4,928 bytes allocated
==1286== 
==1286== LEAK SUMMARY:
==1286==    definitely lost: 0 bytes in 0 blocks
==1286==    indirectly lost: 0 bytes in 0 blocks
==1286==      possibly lost: 0 bytes in 0 blocks
==1286==    still reachable: 784 bytes in 11 blocks
==1286==         suppressed: 0 bytes in 0 blocks
==1286== Rerun with --leak-check=full to see details of leaked memory
==1286== 
==1286== For counts of detected and suppressed errors, rerun with: -v
==1286== Use --track-origins=yes to see where uninitialised values come from
==1286== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

Overall Grade: F
