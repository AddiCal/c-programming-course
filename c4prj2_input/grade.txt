Grading at Fri May 17 05:06:18 UTC 2019
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Your file matched the expected output
Test case passed
Testing with input file with 
 o Many hands
 o No unknown/future cards
Your file matched the expected output
Test case passed
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==3530== Memcheck, a memory error detector
==3530== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==3530== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==3530== Command: ./tester h.txt d.txt
==3530== Parent PID: 3529
==3530== 
==3530== Use of uninitialised value of size 8
==3530==    at 0x4014CA: add_future_card (in /graderhome/work/c4prj2_input/tester)
==3530==    by 0x400DA6: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==3530==    by 0x401061: read_input (in /graderhome/work/c4prj2_input/tester)
==3530==    by 0x4026C7: main (test-input.c:69)
==3530== 
==3530== Invalid write of size 4
==3530==    at 0x4014CA: add_future_card (in /graderhome/work/c4prj2_input/tester)
==3530==    by 0x400DA6: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==3530==    by 0x401061: read_input (in /graderhome/work/c4prj2_input/tester)
==3530==    by 0x4026C7: main (test-input.c:69)
==3530==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==3530== 
==3530== 
==3530== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==3530==  Access not within mapped region at address 0x0
==3530==    at 0x4014CA: add_future_card (in /graderhome/work/c4prj2_input/tester)
==3530==    by 0x400DA6: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==3530==    by 0x401061: read_input (in /graderhome/work/c4prj2_input/tester)
==3530==    by 0x4026C7: main (test-input.c:69)
==3530==  If you believe this happened as a result of a stack
==3530==  overflow in your program's main thread (unlikely but
==3530==  possible), you can try to increase the size of the
==3530==  main thread stack using the --main-stacksize= flag.
==3530==  The main thread stack size used in this run was 8388608.
==3530== 
==3530== HEAP SUMMARY:
==3530==     in use at exit: 888 bytes in 16 blocks
==3530==   total heap usage: 28 allocs, 12 frees, 5,272 bytes allocated
==3530== 
==3530== LEAK SUMMARY:
==3530==    definitely lost: 0 bytes in 0 blocks
==3530==    indirectly lost: 0 bytes in 0 blocks
==3530==      possibly lost: 0 bytes in 0 blocks
==3530==    still reachable: 888 bytes in 16 blocks
==3530==         suppressed: 0 bytes in 0 blocks
==3530== Rerun with --leak-check=full to see details of leaked memory
==3530== 
==3530== For counts of detected and suppressed errors, rerun with: -v
==3530== Use --track-origins=yes to see where uninitialised values come from
==3530== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==3536== Memcheck, a memory error detector
==3536== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==3536== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==3536== Command: ./tester i1 i2
==3536== Parent PID: 3535
==3536== 
==3536== Use of uninitialised value of size 8
==3536==    at 0x4014CA: add_future_card (in /graderhome/work/c4prj2_input/tester)
==3536==    by 0x400DA6: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==3536==    by 0x401061: read_input (in /graderhome/work/c4prj2_input/tester)
==3536==    by 0x4026C7: main (test-input.c:69)
==3536== 
==3536== Invalid write of size 4
==3536==    at 0x4014CA: add_future_card (in /graderhome/work/c4prj2_input/tester)
==3536==    by 0x400DA6: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==3536==    by 0x401061: read_input (in /graderhome/work/c4prj2_input/tester)
==3536==    by 0x4026C7: main (test-input.c:69)
==3536==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==3536== 
==3536== 
==3536== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==3536==  Access not within mapped region at address 0x0
==3536==    at 0x4014CA: add_future_card (in /graderhome/work/c4prj2_input/tester)
==3536==    by 0x400DA6: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==3536==    by 0x401061: read_input (in /graderhome/work/c4prj2_input/tester)
==3536==    by 0x4026C7: main (test-input.c:69)
==3536==  If you believe this happened as a result of a stack
==3536==  overflow in your program's main thread (unlikely but
==3536==  possible), you can try to increase the size of the
==3536==  main thread stack using the --main-stacksize= flag.
==3536==  The main thread stack size used in this run was 8388608.
==3536== 
==3536== HEAP SUMMARY:
==3536==     in use at exit: 816 bytes in 13 blocks
==3536==   total heap usage: 19 allocs, 6 frees, 4,984 bytes allocated
==3536== 
==3536== LEAK SUMMARY:
==3536==    definitely lost: 0 bytes in 0 blocks
==3536==    indirectly lost: 0 bytes in 0 blocks
==3536==      possibly lost: 0 bytes in 0 blocks
==3536==    still reachable: 816 bytes in 13 blocks
==3536==         suppressed: 0 bytes in 0 blocks
==3536== Rerun with --leak-check=full to see details of leaked memory
==3536== 
==3536== For counts of detected and suppressed errors, rerun with: -v
==3536== Use --track-origins=yes to see where uninitialised values come from
==3536== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

Overall Grade: C
