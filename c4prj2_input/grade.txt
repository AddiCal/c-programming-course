Grading at Sat May 11 03:19:19 UTC 2019
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Your file matched the expected output
Test case passed
Testing with input file with 
 o Many hands
 o No unknown/future cards
Your file matched the expected output
Test case passed
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==1920== Memcheck, a memory error detector
==1920== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1920== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1920== Command: ./tester h.txt d.txt
==1920== Parent PID: 1919
==1920== 
==1920== Invalid write of size 8
==1920==    at 0x4014B1: add_future_card (in /graderhome/work/c4prj2_input/tester)
==1920==    by 0x400DB3: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1920==    by 0x400F96: read_input (in /graderhome/work/c4prj2_input/tester)
==1920==    by 0x4023AB: main (test-input.c:69)
==1920==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1920== 
==1920== 
==1920== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1920==  Access not within mapped region at address 0x0
==1920==    at 0x4014B1: add_future_card (in /graderhome/work/c4prj2_input/tester)
==1920==    by 0x400DB3: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1920==    by 0x400F96: read_input (in /graderhome/work/c4prj2_input/tester)
==1920==    by 0x4023AB: main (test-input.c:69)
==1920==  If you believe this happened as a result of a stack
==1920==  overflow in your program's main thread (unlikely but
==1920==  possible), you can try to increase the size of the
==1920==  main thread stack using the --main-stacksize= flag.
==1920==  The main thread stack size used in this run was 8388608.
==1920== 
==1920== HEAP SUMMARY:
==1920==     in use at exit: 848 bytes in 16 blocks
==1920==   total heap usage: 23 allocs, 7 frees, 5,112 bytes allocated
==1920== 
==1920== LEAK SUMMARY:
==1920==    definitely lost: 8 bytes in 1 blocks
==1920==    indirectly lost: 0 bytes in 0 blocks
==1920==      possibly lost: 0 bytes in 0 blocks
==1920==    still reachable: 840 bytes in 15 blocks
==1920==         suppressed: 0 bytes in 0 blocks
==1920== Rerun with --leak-check=full to see details of leaked memory
==1920== 
==1920== For counts of detected and suppressed errors, rerun with: -v
==1920== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==1926== Memcheck, a memory error detector
==1926== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1926== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1926== Command: ./tester i1 i2
==1926== Parent PID: 1925
==1926== 
==1926== Invalid write of size 8
==1926==    at 0x4014B1: add_future_card (in /graderhome/work/c4prj2_input/tester)
==1926==    by 0x400DB3: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1926==    by 0x400F96: read_input (in /graderhome/work/c4prj2_input/tester)
==1926==    by 0x4023AB: main (test-input.c:69)
==1926==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1926== 
==1926== 
==1926== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1926==  Access not within mapped region at address 0x0
==1926==    at 0x4014B1: add_future_card (in /graderhome/work/c4prj2_input/tester)
==1926==    by 0x400DB3: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1926==    by 0x400F96: read_input (in /graderhome/work/c4prj2_input/tester)
==1926==    by 0x4023AB: main (test-input.c:69)
==1926==  If you believe this happened as a result of a stack
==1926==  overflow in your program's main thread (unlikely but
==1926==  possible), you can try to increase the size of the
==1926==  main thread stack using the --main-stacksize= flag.
==1926==  The main thread stack size used in this run was 8388608.
==1926== 
==1926== HEAP SUMMARY:
==1926==     in use at exit: 800 bytes in 13 blocks
==1926==   total heap usage: 17 allocs, 4 frees, 4,944 bytes allocated
==1926== 
==1926== LEAK SUMMARY:
==1926==    definitely lost: 8 bytes in 1 blocks
==1926==    indirectly lost: 0 bytes in 0 blocks
==1926==      possibly lost: 0 bytes in 0 blocks
==1926==    still reachable: 792 bytes in 12 blocks
==1926==         suppressed: 0 bytes in 0 blocks
==1926== Rerun with --leak-check=full to see details of leaked memory
==1926== 
==1926== For counts of detected and suppressed errors, rerun with: -v
==1926== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Overall Grade: C
