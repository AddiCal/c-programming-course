Grading at Thu May  9 20:35:49 UTC 2019
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Line_1_did_not_match
Line_2_did_not_match
Your file did not match the expected ouput
Test case failed
Testing with input file with 
 o Many hands
 o No unknown/future cards
Line_1_did_not_match
Line_2_did_not_match
Line_3_did_not_match
Line_4_did_not_match
Line_5_did_not_match
Line_6_did_not_match
Line_7_did_not_match
Line_8_did_not_match
Your file did not match the expected ouput
Test case failed
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==403== Memcheck, a memory error detector
==403== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==403== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==403== Command: ./tester h.txt d.txt
==403== Parent PID: 402
==403== 
==403== Invalid write of size 8
==403==    at 0x401326: add_future_card (in /graderhome/work/c4prj2_input/tester)
==403==    by 0x400D55: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==403==    by 0x400F3B: read_input (in /graderhome/work/c4prj2_input/tester)
==403==    by 0x402494: main (test-input.c:69)
==403==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==403== 
==403== 
==403== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==403==  Access not within mapped region at address 0x0
==403==    at 0x401326: add_future_card (in /graderhome/work/c4prj2_input/tester)
==403==    by 0x400D55: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==403==    by 0x400F3B: read_input (in /graderhome/work/c4prj2_input/tester)
==403==    by 0x402494: main (test-input.c:69)
==403==  If you believe this happened as a result of a stack
==403==  overflow in your program's main thread (unlikely but
==403==  possible), you can try to increase the size of the
==403==  main thread stack using the --main-stacksize= flag.
==403==  The main thread stack size used in this run was 8388608.
==403== 
==403== HEAP SUMMARY:
==403==     in use at exit: 848 bytes in 16 blocks
==403==   total heap usage: 24 allocs, 8 frees, 9,208 bytes allocated
==403== 
==403== LEAK SUMMARY:
==403==    definitely lost: 8 bytes in 1 blocks
==403==    indirectly lost: 0 bytes in 0 blocks
==403==      possibly lost: 0 bytes in 0 blocks
==403==    still reachable: 840 bytes in 15 blocks
==403==         suppressed: 0 bytes in 0 blocks
==403== Rerun with --leak-check=full to see details of leaked memory
==403== 
==403== For counts of detected and suppressed errors, rerun with: -v
==403== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==409== Memcheck, a memory error detector
==409== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==409== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==409== Command: ./tester i1 i2
==409== Parent PID: 408
==409== 
==409== Invalid write of size 8
==409==    at 0x401326: add_future_card (in /graderhome/work/c4prj2_input/tester)
==409==    by 0x400D55: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==409==    by 0x400F3B: read_input (in /graderhome/work/c4prj2_input/tester)
==409==    by 0x402494: main (test-input.c:69)
==409==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==409== 
==409== 
==409== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==409==  Access not within mapped region at address 0x0
==409==    at 0x401326: add_future_card (in /graderhome/work/c4prj2_input/tester)
==409==    by 0x400D55: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==409==    by 0x400F3B: read_input (in /graderhome/work/c4prj2_input/tester)
==409==    by 0x402494: main (test-input.c:69)
==409==  If you believe this happened as a result of a stack
==409==  overflow in your program's main thread (unlikely but
==409==  possible), you can try to increase the size of the
==409==  main thread stack using the --main-stacksize= flag.
==409==  The main thread stack size used in this run was 8388608.
==409== 
==409== HEAP SUMMARY:
==409==     in use at exit: 800 bytes in 13 blocks
==409==   total heap usage: 18 allocs, 5 frees, 9,040 bytes allocated
==409== 
==409== LEAK SUMMARY:
==409==    definitely lost: 8 bytes in 1 blocks
==409==    indirectly lost: 0 bytes in 0 blocks
==409==      possibly lost: 0 bytes in 0 blocks
==409==    still reachable: 792 bytes in 12 blocks
==409==         suppressed: 0 bytes in 0 blocks
==409== Rerun with --leak-check=full to see details of leaked memory
==409== 
==409== For counts of detected and suppressed errors, rerun with: -v
==409== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Overall Grade: F
