Grading at Fri May 17 04:50:26 UTC 2019
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Your file matched the expected output
Test case passed
Testing with input file with 
 o Many hands
 o No unknown/future cards
Your file matched the expected output
Test case passed
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==2521== Memcheck, a memory error detector
==2521== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2521== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2521== Command: ./tester h.txt d.txt
==2521== Parent PID: 2520
==2521== 
==2521== Invalid write of size 8
==2521==    at 0x401579: add_future_card (in /graderhome/work/c4prj2_input/tester)
==2521==    by 0x400DA6: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==2521==    by 0x401061: read_input (in /graderhome/work/c4prj2_input/tester)
==2521==    by 0x4025E1: main (test-input.c:69)
==2521==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==2521== 
==2521== 
==2521== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2521==  Access not within mapped region at address 0x0
==2521==    at 0x401579: add_future_card (in /graderhome/work/c4prj2_input/tester)
==2521==    by 0x400DA6: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==2521==    by 0x401061: read_input (in /graderhome/work/c4prj2_input/tester)
==2521==    by 0x4025E1: main (test-input.c:69)
==2521==  If you believe this happened as a result of a stack
==2521==  overflow in your program's main thread (unlikely but
==2521==  possible), you can try to increase the size of the
==2521==  main thread stack using the --main-stacksize= flag.
==2521==  The main thread stack size used in this run was 8388608.
==2521== 
==2521== HEAP SUMMARY:
==2521==     in use at exit: 904 bytes in 18 blocks
==2521==   total heap usage: 30 allocs, 12 frees, 5,288 bytes allocated
==2521== 
==2521== LEAK SUMMARY:
==2521==    definitely lost: 8 bytes in 1 blocks
==2521==    indirectly lost: 0 bytes in 0 blocks
==2521==      possibly lost: 0 bytes in 0 blocks
==2521==    still reachable: 896 bytes in 17 blocks
==2521==         suppressed: 0 bytes in 0 blocks
==2521== Rerun with --leak-check=full to see details of leaked memory
==2521== 
==2521== For counts of detected and suppressed errors, rerun with: -v
==2521== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==2527== Memcheck, a memory error detector
==2527== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2527== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2527== Command: ./tester i1 i2
==2527== Parent PID: 2526
==2527== 
==2527== Invalid write of size 8
==2527==    at 0x401579: add_future_card (in /graderhome/work/c4prj2_input/tester)
==2527==    by 0x400DA6: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==2527==    by 0x401061: read_input (in /graderhome/work/c4prj2_input/tester)
==2527==    by 0x4025E1: main (test-input.c:69)
==2527==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==2527== 
==2527== 
==2527== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2527==  Access not within mapped region at address 0x0
==2527==    at 0x401579: add_future_card (in /graderhome/work/c4prj2_input/tester)
==2527==    by 0x400DA6: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==2527==    by 0x401061: read_input (in /graderhome/work/c4prj2_input/tester)
==2527==    by 0x4025E1: main (test-input.c:69)
==2527==  If you believe this happened as a result of a stack
==2527==  overflow in your program's main thread (unlikely but
==2527==  possible), you can try to increase the size of the
==2527==  main thread stack using the --main-stacksize= flag.
==2527==  The main thread stack size used in this run was 8388608.
==2527== 
==2527== HEAP SUMMARY:
==2527==     in use at exit: 832 bytes in 15 blocks
==2527==   total heap usage: 21 allocs, 6 frees, 5,000 bytes allocated
==2527== 
==2527== LEAK SUMMARY:
==2527==    definitely lost: 8 bytes in 1 blocks
==2527==    indirectly lost: 0 bytes in 0 blocks
==2527==      possibly lost: 0 bytes in 0 blocks
==2527==    still reachable: 824 bytes in 14 blocks
==2527==         suppressed: 0 bytes in 0 blocks
==2527== Rerun with --leak-check=full to see details of leaked memory
==2527== 
==2527== For counts of detected and suppressed errors, rerun with: -v
==2527== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Overall Grade: C
