Grading at Fri May 17 04:56:23 UTC 2019
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Your file matched the expected output
Test case passed
Testing with input file with 
 o Many hands
 o No unknown/future cards
Your file matched the expected output
Test case passed
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==2921== Memcheck, a memory error detector
==2921== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2921== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2921== Command: ./tester h.txt d.txt
==2921== Parent PID: 2920
==2921== 
==2921== Invalid write of size 8
==2921==    at 0x4014B5: add_future_card (in /graderhome/work/c4prj2_input/tester)
==2921==    by 0x400DA6: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==2921==    by 0x401061: read_input (in /graderhome/work/c4prj2_input/tester)
==2921==    by 0x40265D: main (test-input.c:69)
==2921==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==2921== 
==2921== 
==2921== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2921==  Access not within mapped region at address 0x0
==2921==    at 0x4014B5: add_future_card (in /graderhome/work/c4prj2_input/tester)
==2921==    by 0x400DA6: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==2921==    by 0x401061: read_input (in /graderhome/work/c4prj2_input/tester)
==2921==    by 0x40265D: main (test-input.c:69)
==2921==  If you believe this happened as a result of a stack
==2921==  overflow in your program's main thread (unlikely but
==2921==  possible), you can try to increase the size of the
==2921==  main thread stack using the --main-stacksize= flag.
==2921==  The main thread stack size used in this run was 8388608.
==2921== 
==2921== HEAP SUMMARY:
==2921==     in use at exit: 904 bytes in 18 blocks
==2921==   total heap usage: 30 allocs, 12 frees, 5,288 bytes allocated
==2921== 
==2921== LEAK SUMMARY:
==2921==    definitely lost: 8 bytes in 1 blocks
==2921==    indirectly lost: 0 bytes in 0 blocks
==2921==      possibly lost: 0 bytes in 0 blocks
==2921==    still reachable: 896 bytes in 17 blocks
==2921==         suppressed: 0 bytes in 0 blocks
==2921== Rerun with --leak-check=full to see details of leaked memory
==2921== 
==2921== For counts of detected and suppressed errors, rerun with: -v
==2921== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==2927== Memcheck, a memory error detector
==2927== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2927== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2927== Command: ./tester i1 i2
==2927== Parent PID: 2926
==2927== 
==2927== Invalid write of size 8
==2927==    at 0x4014B5: add_future_card (in /graderhome/work/c4prj2_input/tester)
==2927==    by 0x400DA6: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==2927==    by 0x401061: read_input (in /graderhome/work/c4prj2_input/tester)
==2927==    by 0x40265D: main (test-input.c:69)
==2927==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==2927== 
==2927== 
==2927== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2927==  Access not within mapped region at address 0x0
==2927==    at 0x4014B5: add_future_card (in /graderhome/work/c4prj2_input/tester)
==2927==    by 0x400DA6: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==2927==    by 0x401061: read_input (in /graderhome/work/c4prj2_input/tester)
==2927==    by 0x40265D: main (test-input.c:69)
==2927==  If you believe this happened as a result of a stack
==2927==  overflow in your program's main thread (unlikely but
==2927==  possible), you can try to increase the size of the
==2927==  main thread stack using the --main-stacksize= flag.
==2927==  The main thread stack size used in this run was 8388608.
==2927== 
==2927== HEAP SUMMARY:
==2927==     in use at exit: 832 bytes in 15 blocks
==2927==   total heap usage: 21 allocs, 6 frees, 5,000 bytes allocated
==2927== 
==2927== LEAK SUMMARY:
==2927==    definitely lost: 8 bytes in 1 blocks
==2927==    indirectly lost: 0 bytes in 0 blocks
==2927==      possibly lost: 0 bytes in 0 blocks
==2927==    still reachable: 824 bytes in 14 blocks
==2927==         suppressed: 0 bytes in 0 blocks
==2927== Rerun with --leak-check=full to see details of leaked memory
==2927== 
==2927== For counts of detected and suppressed errors, rerun with: -v
==2927== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Overall Grade: C
